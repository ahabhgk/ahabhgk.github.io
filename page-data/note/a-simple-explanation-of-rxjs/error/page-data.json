{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/a-simple-explanation-of-rxjs/error","result":{"data":{"page":{"__typename":"MdxPage","title":"异常错误处理","slug":"/note/a-simple-explanation-of-rxjs/error","excerpt":"异常处理的难点 虽然必要，但会让代码更加复杂 try / catch  只支持同步，因为 try / catch 是同步执行，执行后里面的异步代码还没有执行，就抓不到异步代码的错误 因此出现 callback，通过传递 cb…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"异常错误处理\",\n  \"slug\": \"/note/a-simple-explanation-of-rxjs/error\",\n  \"date\": \"2020-02-19T00:00:00.000Z\",\n  \"description\": \"《深入浅出 RxJS》读书笔记\",\n  \"tags\": [\"Note\", \"A Simple Explanation of RxJS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"异常处理的难点\"\n  }, \"\\u5F02\\u5E38\\u5904\\u7406\\u7684\\u96BE\\u70B9\"), mdx(\"p\", null, \"\\u867D\\u7136\\u5FC5\\u8981\\uFF0C\\u4F46\\u4F1A\\u8BA9\\u4EE3\\u7801\\u66F4\\u52A0\\u590D\\u6742\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"try / catch\"), \" \\u53EA\\u652F\\u6301\\u540C\\u6B65\\uFF0C\\u56E0\\u4E3A try / catch \\u662F\\u540C\\u6B65\\u6267\\u884C\\uFF0C\\u6267\\u884C\\u540E\\u91CC\\u9762\\u7684\\u5F02\\u6B65\\u4EE3\\u7801\\u8FD8\\u6CA1\\u6709\\u6267\\u884C\\uFF0C\\u5C31\\u6293\\u4E0D\\u5230\\u5F02\\u6B65\\u4EE3\\u7801\\u7684\\u9519\\u8BEF\"), mdx(\"p\", null, \"\\u56E0\\u6B64\\u51FA\\u73B0 callback\\uFF0C\\u901A\\u8FC7\\u4F20\\u9012 cb \\u53C2\\u6570\\u628A\\u5F02\\u6B65\\u4E4B\\u540E\\u7684\\u903B\\u8F91\\u4F20\\u5165\\uFF0C\\u76F8\\u5E94\\u9519\\u8BEF\\u5904\\u7406\\u4E5F\\u653E\\u5230\\u5F02\\u6B65\\u4EE3\\u7801\\u5185\\u90E8\\uFF0C\\u4F46\\u662F\\u6709 cbhell \\u95EE\\u9898\"), mdx(\"p\", null, \"\\u4E4B\\u540E\\u51FA\\u73B0 Promise\\uFF0C\\u867D\\u7136\\u4E5F\\u662F\\u4F20\\u5165 cb \\u5904\\u7406\\uFF0C\\u4F46\\u662F\\u5C06 cb \\u5D4C\\u5957\\u7ED3\\u6784\\u5C55\\u5E73\\u6210\\u94FE\\u5F0F\\u7ED3\\u6784\\uFF0C\\u89E3\\u51B3\\u4EE3\\u7801\\u7ED3\\u6784\\u95EE\\u9898\\uFF0C\\u4F46\\u662F\\u8BBE\\u8BA1\\u4E0A\\u7531\\u4E8E Promise \\u6700\\u7EC8\\u8F6C\\u6362\\u4E3A fulfilled \\u6216 rejected \\u6001\\u5C31\\u7ED3\\u675F\\u4E86\\uFF0C\\u91CD\\u8BD5\\u7684\\u903B\\u8F91\\u4E0D\\u80FD\\u7531 promise \\u672C\\u8EAB\\u5904\\u7406\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Promise \\u548C Observable \\u540C\\u5C5E Monod\\uFF0CPromise \\u4E2D\\u7684 then \\u76F8\\u5F53\\u4E8E map\")), mdx(\"h2\", {\n    \"id\": \"rxjs-的异常处理\"\n  }, \"RxJS \\u7684\\u5F02\\u5E38\\u5904\\u7406\"), mdx(\"p\", null, \"\\u5728\\u51FD\\u6570\\u5F0F\\u7F16\\u7A0B\\u4E2D\\uFF0C\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"throw new Error()\"), \" \\u76F8\\u5F53\\u4E8E\\u589E\\u52A0\\u4E86\\u51FD\\u6570\\u4E00\\u4E2A\\u65B0\\u7684\\u51FA\\u53E3\\uFF0C\\u629B\\u51FA\\u53BB\\u7684\\u5F02\\u5E38\\u53EF\\u80FD\\u4F1A\\u5BFC\\u81F4\\u526F\\u4F5C\\u7528\\uFF0C\\u5BFC\\u81F4\\u51FD\\u6570\\u4E0D\\u7EAF\"), mdx(\"p\", null, \"\\u540C\\u65F6\\u4ECE caller \\u7684\\u89D2\\u5EA6\\uFF0C\\u4E0D\\u4EC5\\u9700\\u8981\\u5904\\u7406\\u8FD4\\u56DE\\u503C\\uFF0C\\u8FD8\\u6709\\u5904\\u7406\\u53EF\\u80FD\\u7684\\u5F02\\u5E38\\uFF0C\\u8FD9\\u66F4\\u52A0\\u91CD\\u4E86 caller \\u7684\\u8D1F\\u62C5\"), mdx(\"p\", null, \"\\u5728 $ \\u4E2D\\uFF0C\\u5F02\\u5E38\\u53EA\\u4F1A\\u5728\\u81EA\\u5DF1\\u7684\\u7BA1\\u9053\\u4E2D\\u5904\\u7406\\u6389\\uFF0C\\u6216\\u662F\\u6D41\\u5230\\u4E0B\\u6E38\\u901A\\u8FC7 theObserver.error \\u5904\\u7406\\uFF0C\\u4E0D\\u4F1A\\u5F71\\u54CD\\u5176\\u4ED6\\u7684\\u6D41\\u6216\\u662F\\u5168\\u5C40\\u7684\\u72B6\\u6001\"), mdx(\"p\", null, \"\\u7BA1\\u9053\\u4E2D\\u7684\\u5904\\u7406\\u5206\\u4E3A\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u6062\\u590D\"), \"\\u548C\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u91CD\\u8BD5\"), \"\\uFF1A\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u6062\\u590D\\uFF1A\\u867D\\u7136\\u4EA7\\u751F\\u4E86\\u9519\\u8BEF\\uFF0C\\u4F46\\u662F\\u4F9D\\u7136\\u8BA9\\u8FD0\\u7B97\\u8FDB\\u884C\\u4E0B\\u53BB\\uFF0C\\u6BD4\\u5982\\u901A\\u8FC7 defaultValue\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"\\u91CD\\u8BD5\\uFF1A\\u8981\\u6709\\u4E0A\\u9650\\uFF0C\\u6700\\u7EC8\\u4E0D\\u884C\\u8FD8\\u662F\\u8981\\u7528\\u6062\\u590D\"))), mdx(\"h3\", {\n    \"id\": \"catcherror-恢复\"\n  }, \"catchError \\u6062\\u590D\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"selector: a function that takes as arguments err, which is the error, and caught, which is the source observable, in case you'd like to \\\"retry\\\" that observable by returning it again. Whatever observable is returned by the selector will be used to continue the observable chain\")), mdx(\"p\", null, \"\\u7528\\u4F5C\\u91CD\\u8BD5\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"of(1, 2, 3, 4, 5).pipe(\\n  map(n => {\\n    if (n === 4) {\\n      throw 'four!'\\n    }\\n    return n\\n  }),\\n  catchError((err, caught$) => caught$),\\n  take(10),\\n).subscribe(x => console.log(x))\\n// 1, 2, 3, 1, 2, 3, 1, 2, 3, 1\\n\")), mdx(\"p\", null, \"\\u7ED9 theObserver.error \\u5904\\u7406\\uFF1A\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"of(1, 2, 3, 4, 5).pipe(\\n  map(n => {\\n    if (n === 4) {\\n      throw 'four!'\\n    }\\n    return n\\n  }),\\n  catchError((err, caught$) => {\\n    throw err\\n  }),\\n).subscribe(console.log, console.error)\\n\")), mdx(\"h3\", {\n    \"id\": \"retry-重试\"\n  }, \"retry \\u91CD\\u8BD5\"), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"retry<T>(count: number = -1): MonoTypeOperatorFunction<T>\")), mdx(\"p\", null, \"retry \\u662F\\u7ACB\\u5373\\u6267\\u884C\\u91CD\\u8BD5\\u7684\\uFF0C\\u6709\\u65F6\\u9700\\u8981\\u7B49\\u5230\\u67D0\\u4E2A\\u65F6\\u673A\\u518D\\u91CD\\u8BD5\\uFF1A\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"retryWhen\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Returns an Observable that mirrors the source Observable with the exception of an error. If the source Observable calls error, this method will emit the Throwable that caused the error to the Observable returned from notifier. If that Observable calls complete or error then this method will call complete or error on the child subscription. Otherwise this method will resubscribe to the source Observable.\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"error$.pipe(\\n  ((max) => retryWhen(err$ => err$.pipe(\\n    scan((errorCount, error) => {\\n      if (errorCount >= max) throw error\\n      return errorCount + 1\\n    })\\n  )))(3),\\n) // retry(3)\\n\")), mdx(\"p\", null, \"\\u540C\\u6837\\u53EF\\u4EE5\\u62BD\\u8C61\\u51FA\\u5EF6\\u8FDF\\u5E76\\u6709\\u4E0A\\u9650\\u7684\\u91CD\\u8BD5\\u7B49\\u5176\\u4ED6\\u64CD\\u4F5C\\u7B26\"), mdx(\"h3\", {\n    \"id\": \"finalize\"\n  }, \"finalize\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Callback will call a specified function when the source terminates on complete or error.\")), mdx(\"h2\", {\n    \"id\": \"重试的本质\"\n  }, \"\\u91CD\\u8BD5\\u7684\\u672C\\u8D28\"), mdx(\"p\", null, \"\\u91CD\\u65B0\\u8BA2\\u9605\\uFF0C\\u5148\\u9000\\u8BA2\\u7136\\u540E\\u518D\\u8BA2\\u9605\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/a-simple-explanation-of-rxjs/error"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}