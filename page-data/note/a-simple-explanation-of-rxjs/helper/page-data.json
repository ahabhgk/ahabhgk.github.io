{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/a-simple-explanation-of-rxjs/helper","result":{"data":{"page":{"__typename":"MdxPage","title":"辅助类数据流","slug":"/note/a-simple-explanation-of-rxjs/helper","excerpt":"数学类操作符 这些操作符必定会遍历上游 Observable 对象中吐出的所有数据才给下游传递数据，也就是说，它们只有在上游完结的时候，才给下游传递唯一数据 count 统计数据个数 max、min reduce 规约 条件布尔类操作符 every find、findIndex…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"辅助类数据流\",\n  \"slug\": \"/note/a-simple-explanation-of-rxjs/helper\",\n  \"date\": \"2020-02-16T00:00:00.000Z\",\n  \"description\": \"《深入浅出 RxJS》读书笔记\",\n  \"tags\": [\"Note\", \"A Simple Explanation of RxJS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"数学类操作符\"\n  }, \"\\u6570\\u5B66\\u7C7B\\u64CD\\u4F5C\\u7B26\"), mdx(\"p\", null, \"\\u8FD9\\u4E9B\\u64CD\\u4F5C\\u7B26\\u5FC5\\u5B9A\\u4F1A\\u904D\\u5386\\u4E0A\\u6E38 Observable \\u5BF9\\u8C61\\u4E2D\\u5410\\u51FA\\u7684\\u6240\\u6709\\u6570\\u636E\\u624D\\u7ED9\\u4E0B\\u6E38\\u4F20\\u9012\\u6570\\u636E\\uFF0C\\u4E5F\\u5C31\\u662F\\u8BF4\\uFF0C\\u5B83\\u4EEC\\u53EA\\u6709\\u5728\\u4E0A\\u6E38\\u5B8C\\u7ED3\\u7684\\u65F6\\u5019\\uFF0C\\u624D\\u7ED9\\u4E0B\\u6E38\\u4F20\\u9012\\u552F\\u4E00\\u6570\\u636E\"), mdx(\"h3\", {\n    \"id\": \"count-统计数据个数\"\n  }, \"count \\u7EDF\\u8BA1\\u6570\\u636E\\u4E2A\\u6570\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interval(1000).pipe(count()) == never()\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"timer(1000).pipe(\\n  concat(timer(1000)),\\n  count(),\\n) // log 2 after 2 secends\\n\\nconst numbers = range(1, 7);\\nconst result = numbers.pipe(count(i => i % 2 === 1))\\nresult.subscribe(x => console.log(x)) // 4\\n\")), mdx(\"h3\", {\n    \"id\": \"max、min\"\n  }, \"max\\u3001min\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"interface Person {\\n  age: number,\\n  name: string\\n}\\nof<Person>(\\n  {age: 7, name: 'Foo'},\\n  {age: 5, name: 'Bar'},\\n  {age: 9, name: 'Beer'},\\n).pipe(\\n  max<Person>((a: Person, b: Person) => a.age < b.age ? -1 : 1),\\n).subscribe((x: Person) => console.log(x.name)) // -> 'Beer'\\n\")), mdx(\"h3\", {\n    \"id\": \"reduce-规约\"\n  }, \"reduce \\u89C4\\u7EA6\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const clicksInFiveSeconds = fromEvent(document, 'click').pipe(\\n  takeUntil(interval(5000)),\\n)\\nconst ones = clicksInFiveSeconds.pipe(mapTo(1))\\nconst count = ones.pipe(reduce((acc, one) => acc + one, 0))\\ncount.subscribe(x => console.log(x))\\n\")), mdx(\"h2\", {\n    \"id\": \"条件布尔类操作符\"\n  }, \"\\u6761\\u4EF6\\u5E03\\u5C14\\u7C7B\\u64CD\\u4F5C\\u7B26\"), mdx(\"h3\", {\n    \"id\": \"every\"\n  }, \"every\"), mdx(\"h3\", {\n    \"id\": \"find、findindex\"\n  }, \"find\\u3001findIndex\"), mdx(\"h3\", {\n    \"id\": \"isempty\"\n  }, \"isEmpty\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"import { EMPTY } from 'rxjs'\\nimport { isEmpty } from 'rxjs/operators'\\n\\nconst result = EMPTY.pipe(isEmpty())\\n// true\\nObservable.create((ob) => sleep(1000).then(() => ob.complete())).pipe(isEmpty())\\n// true after 1000 ms\\n\")), mdx(\"h3\", {\n    \"id\": \"defaultifempty\"\n  }, \"defaultIfEmpty\"), mdx(\"p\", null, \"\\u63A5\\u53D7\\u4E00\\u4E2A\\u53C2\\u6570\\u505A\\u9ED8\\u8BA4\\u503C\\uFF0C\\u5982\\u679C\\u4E0A\\u6E38\\u7A7A\\u7684\\u8BDD\\u4F1A\\u8FD4\\u56DE\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u4E00\\u4E2A\"), \"\\u9ED8\\u8BA4\\u503C\\u7ED9\\u4E0B\\u6E38\\uFF0C\\u6CA1\\u6709\\u6CA1\\u4F20\\u9ED8\\u8BA4\\u503C\\u5219\\u4E3A null\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-ts\"\n  }), \"const clicks = fromEvent(document, 'click')\\nconst clicksBeforeFive = clicks.pipe(takeUntil(interval(5000)))\\nconst result = clicksBeforeFive.pipe(defaultIfEmpty('no clicks'))\\nresult.subscribe(x => console.log(x))\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/a-simple-explanation-of-rxjs/helper"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}