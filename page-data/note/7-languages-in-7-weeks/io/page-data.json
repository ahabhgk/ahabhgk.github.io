{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/7-languages-in-7-weeks/io","result":{"data":{"page":{"__typename":"MdxPage","title":"Io","slug":"/note/7-languages-in-7-weeks/io","excerpt":"Io 语法只不过把消息全部串联起来，每个消息都返回一个对象，每条消息都也都带有括号内的可选参数\nIo 中，一切皆为消息，且每条消息都会返回另一条接受消息的对象\nIo…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Io\",\n  \"slug\": \"/note/7-languages-in-7-weeks/io\",\n  \"date\": \"2020-02-28T00:00:00.000Z\",\n  \"description\": \"《7 周 7 语言》读书笔记\",\n  \"tags\": [\"Note\", \"7 Languages in 7 Weeks\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Io \\u8BED\\u6CD5\\u53EA\\u4E0D\\u8FC7\\u628A\\u6D88\\u606F\\u5168\\u90E8\\u4E32\\u8054\\u8D77\\u6765\\uFF0C\\u6BCF\\u4E2A\\u6D88\\u606F\\u90FD\\u8FD4\\u56DE\\u4E00\\u4E2A\\u5BF9\\u8C61\\uFF0C\\u6BCF\\u6761\\u6D88\\u606F\\u90FD\\u4E5F\\u90FD\\u5E26\\u6709\\u62EC\\u53F7\\u5185\\u7684\\u53EF\\u9009\\u53C2\\u6570\\nIo \\u4E2D\\uFF0C\\u4E00\\u5207\\u7686\\u4E3A\\u6D88\\u606F\\uFF0C\\u4E14\\u6BCF\\u6761\\u6D88\\u606F\\u90FD\\u4F1A\\u8FD4\\u56DE\\u53E6\\u4E00\\u6761\\u63A5\\u53D7\\u6D88\\u606F\\u7684\\u5BF9\\u8C61\\nIo \\u6CA1\\u6709\\u7C7B\\uFF0C\\u53EA\\u9700\\u8981\\u4E0E\\u5BF9\\u8C61\\u6253\\u4EA4\\u9053\\uFF0C\\u5FC5\\u8981\\u65F6\\u628A\\u5BF9\\u8C61\\u590D\\u5236\\u4E00\\u4E0B\\u5C31\\u884C\\uFF0C\\u8FD9\\u4E9B\\u88AB\\u590D\\u5236\\u7684\\u5BF9\\u8C61\\u53EB\\u539F\\u578B\\uFF0C\\u539F\\u578B\\u8BED\\u8A00\\u4E2D\\uFF0C\\u6BCF\\u4E2A\\u5BF9\\u8C61\\u90FD\\u4E0D\\u662F\\u7C7B\\u7684\\u590D\\u5236\\u54C1\\uFF0C\\u800C\\u662F\\u4E00\\u4E2A\\u5B9E\\u5B9E\\u5728\\u5728\\u7684\\u5BF9\\u8C61\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"brew install io\\n\")), mdx(\"p\", null, \"\\u6240\\u6709\\u4E8B\\u7269\\u90FD\\u662F\\u5BF9\\u8C61\\uFF0C\\u5BF9\\u7531\\u4E8E\\u5BF9\\u8C61\\u4EA4\\u4E92\\u7684\\u90FD\\u662F\\u6D88\\u606F\"), mdx(\"p\", null, \"\\u6D88\\u606F\\uFF1A\\u5DE6\\u8FB9\\u7684\\u662F\\u5BF9\\u8C61\\uFF0C\\u53F3\\u8FB9\\u7684\\u662F\\u6D88\\u606F\\uFF0C\\u628A\\u6D88\\u606F\\u53D1\\u7ED9\\u5BF9\\u8C61\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"\\\"Hello, Io\\\" print // \\\"Hello, Io\\\" \\u5BF9\\u8C61\\u63A5\\u6536 print \\u6D88\\u606F\\n// => \\\"Hello, Io\\\"\\nVehicle := Object clone // Object \\u662F\\u8DDF\\u5BF9\\u8C61\\uFF0C\\u53D1\\u9001 clone \\u6D88\\u606F\\uFF0C\\u8FD4\\u56DE\\u4E00\\u4E2A\\u65B0\\u5BF9\\u8C61\\uFF0C\\u5E76\\u8D4B\\u503C\\u7ED9 Vehicle\\nVehicle description := \\\"gogogo\\\" // \\u5BF9\\u8C61\\u4E0A\\u6709\\u69FD\\uFF0C:= \\u6CA1\\u6709\\u5219\\u521B\\u5EFA\\u5E76\\u8D4B\\u503C\\uFF0C= \\u53EA\\u8D4B\\u503C\\uFF0C\\u6CA1\\u6709\\u5219\\u62A5\\u9519\\nVehicle type // => Vehicle\\uFF0C\\u6BCF\\u4E2A\\u5BF9\\u8C61\\u90FD\\u6709 type \\u69FD\\nVehicle slotNames // => list(type, description)\\n\")), mdx(\"p\", null, \"\\u539F\\u578B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"Vehicle proto // => Object\\nCar := Vehicle clone\\nferrari := Car clone\\nferrari slotNames // => list() type \\u5E94\\u8BE5\\u662F\\u5927\\u5199\\u5F00\\u5934\\nferrari type // => Car \\u5F97\\u5230\\u539F\\u578B\\n\\nCar drive := method(\\\"Vroom\\\" println)\\nferrari drive // => \\\"Vroom\\\"\\nferrari proto // => Car\\n\\nLobby // \\u4E3B\\u547D\\u540D\\u7A7A\\u95F4\\n\")), mdx(\"p\", null, \"List\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"nums := list(1, 2, 3, 4)\\nnums size // => 4\\nnums append(5)\\nnums average // => 3\\nnums pop\\nnums prepend\\nnums isEmpty // => false\\n\")), mdx(\"p\", null, \"Map\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"elvis := Map clone\\nelvis atPut(\\\"home\\\", \\\"Graceland\\\")\\nelvis at(\\\"home\\\") // => \\\"Graceland\\\"\\nelvis atPut(\\\"style\\\", \\\"ror\\\")\\nelvis asObject // => home = \\\"Graceland\\\" style = \\\"ror\\\"\\nelvis asList // => list(list(\\\"home\\\", \\\"Graceland\\\"), list(\\\"style\\\", \\\"ror\\\"))\\nelvis size // => 2\\nelvis keys // => list(\\\"home\\\", \\\"style\\\")\\n\")), mdx(\"p\", null, \"true false nil \\u90FD\\u662F\\u5355\\u4F8B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"true proto // => Object\\ntrue clone // => true\\n\\n// \\u5B9E\\u73B0\\u5355\\u4F8B\\nHighlander := Object clone\\nHighlander clone := Highlander\\n\")), mdx(\"p\", null, \"\\u6761\\u4EF6\\u548C\\u5FAA\\u73AF\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"i := 1\\nwhile(i <= 3, i println; i = i + 1); \\\"end\\\" println // ; \\u4F1A\\u628A\\u4E24\\u4E2A\\u6D88\\u606F\\u8FDE\\u63A5\\u6267\\u884C\\n// 1\\n// 2\\n// 3\\n// end\\n\\nfor(i, 1, 11, 2, i println)\\n// 1\\n// 3\\n// 5\\n// 7\\n// 9\\n// 11\\n// => 11\\n\\nloop(\\\"dead loop\\\" println) // ...\\n\\nif(true, \\\"it's true\\\", \\\"it's false\\\") // \\\"it's true\\\"\\n\")), mdx(\"p\", null, \"\\u8FD0\\u7B97\\u7B26\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"OperatorTable\\n// ==> OperatorTable_0x7facc5448ee0:\\n// Operators\\n//   0   ? @ @@\\n//   1   **\\n//   2   % * /\\n//   3   + -\\n//   4   << >>\\n//   5   < <= > >=\\n//   6   != ==\\n//   7   &\\n//   8   ^\\n//   9   |\\n//   10  && and\\n//   11  or ||\\n//   12  ..\\n//   13  %= &= *= += -= /= <<= >>= ^= |=\\n//   14  return\\n\\n// Assign Operators\\n//   ::= newSlot\\n//   :=  setSlot\\n//   =   updateSlot\\n\\n// To add a new operator: OperatorTable addOperator(\\\"+\\\", 4) and implement the + message.\\n// To add a new assign operator: OperatorTable addAssignOperator(\\\"=\\\", \\\"updateSlot\\\") and implement the updateSlot message.\\n\")), mdx(\"p\", null, \"\\u6D88\\u606F\\uFF1A\\u7531 sender target arguments \\u7EC4\\u6210\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"// call \\u53EF\\u4EE5\\u8BBF\\u95EE\\u6D88\\u606F\\u7684\\u5143\\u4FE1\\u606F\\na myTargets := method(call target)\\na mySender := method(call sender)\\na myMessageName := method(call message name)\\na myMessageArgs := method(call message arguments)\\n\\na myTargets // => a\\na mySender // => Object proto\\na myMessageName // => myMessageName\\na myMessageArgs(1, 2) // => list(1, 2)\\n\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"myif := method(\\n  (call sender doMessage(call message argAt(0))) ifTrue(\\n  call sender doMessage(call message argAt(1))) ifFalse(\\n  call sender doMessage(call message argAt(2)))\\n)\\n\\nmyif(foo == bar, write(\\\"true\\\\n\\\"), write(\\\"false\\\\n\\\"))\\n\")), mdx(\"h2\", {\n    \"id\": \"dsl\"\n  }, \"DSL\"), mdx(\"p\", null, \"\\uD83E\\uDD23\\u505A XOR\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"OperatorTable addOperator(\\\"\\uD83E\\uDD23\\\", 11)\\nOperatorTable println\\ntrue \\uD83E\\uDD23 := method(bool, if(bool, false, true))\\nfalse \\uD83E\\uDD23 := method(bool, if(bool, true, false))\\n\\ntrue \\uD83E\\uDD23 true print // => false\\ntrue \\uD83E\\uDD23 false print // => true\\n\")), mdx(\"p\", null, \"\\u89E3\\u6790 JSON\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"// Make the : an operator so we can parse JSON kv-pairs\\nOperatorTable addAssignOperator(\\\":\\\", \\\"atPutNumber\\\")\\n\\n// Because atPut already stringifies the key, we string the extra quotes\\nMap atPutNumber := method(\\n  self atPut(\\n    call evalArgAt(0) asMutable removePrefix(\\\"\\\\\\\"\\\") removeSuffix(\\\"\\\\\\\"\\\"),\\n    call evalArgAt(1)\\n  )\\n)\\n\\n// Fires whenever the parser encounters curly brackets\\ncurlyBrackets := method (\\n  writeln(\\\"Parsing curly brackets\\\")\\n  r := Map clone\\n  call message arguments foreach(arg,\\n    writeln(\\\"An arg: \\\", arg)\\n    r doMessage(arg)\\n  )\\n  r\\n)\\n\\ns := File with(\\\"phonebook.json\\\") openForReading contents\\n// doString evaluates text as Io source code\\nphoneNumbers := doString(s)\\n\\nphoneNumbers keys println // => list(\\\"Bob Smith\\\", \\\"Mary Walsh\\\")\\nphoneNumbers values println // => list(\\\"5195551212\\\", \\\"4162223434\\\")\\n\")), mdx(\"p\", null, \"method_missing\\uFF1A\\u7F16\\u5199\\u7B80\\u6613 HTML\"), mdx(\"p\", null, \"Io \\u4E2D\\u7684 method_missing \\u662F\\u7C7B\\u7684 forward\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"Builder := Object clone\\nBuilder forward := method(\\n  writeln(\\\"<\\\", call message name, \\\">\\\")\\n  call message arguments foreach(\\n    arg,\\n    content := self doMessage(arg);\\n    if(content != nil, if(content type == \\\"Sequence\\\", writeln(content)))\\n  )\\n  writeln(\\\"</\\\", call message name, \\\">\\\")\\n)\\n\\nBuilder ul(\\n  li(\\\"Io\\\")\\n)\\n// <ul>\\n// <li>\\n// Io\\n// </li>\\n// </ul>\\n\")), mdx(\"p\", null, \"JavaScript \\u4E2D\\u901A\\u8FC7\\u6A21\\u7248\\u5B57\\u7B26\\u4E32\\u5B9E\\u73B0\\u7C7B\\u4F3C\\u529F\\u80FD\"), mdx(\"h2\", {\n    \"id\": \"并发\"\n  }, \"\\u5E76\\u53D1\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://iolanguage.org/guide/guide.html#Concurrency\"\n  }), \"Io \\u5E76\\u53D1\")), mdx(\"p\", null, \"\\u5F02\\u6B65\\u6D88\\u606F\\uFF1A@ \\u524D\\u7F00\\u7684\\u6D88\\u606F\\u8FD4\\u56DE future\\uFF0C@@ \\u524D\\u7F00\\u7684\\u6D88\\u606F\\u8FD4\\u56DE nil \\u5E76\\u5728\\u81EA\\u8EAB\\u4E0A\\u4E0B\\u6587\\u4E2D\\u89E6\\u53D1\\u6D88\\u606F\"), mdx(\"p\", null, \"\\u534F\\u7A0B\\uFF1A\\u201C\\u8F7B\\u91CF\\u7EA7\\u7EBF\\u7A0B\\u201D\"), mdx(\"p\", null, \"\\u53EF\\u4EE5\\u60F3\\u8C61\\u6210\\u5E26\\u6709\\u591A\\u4E2A\\u5165\\u53E3\\u548C\\u51FA\\u53E3\\u7684\\u51FD\\u6570\\uFF0C\\u6BCF\\u6B21 yield \\u90FD\\u4F1A\\u4FDD\\u5B58\\u5F53\\u524D\\u4E0A\\u4E0B\\u6587\\uFF0C\\u5E76\\u628A\\u63A7\\u5236\\u6743\\u4EA4\\u7ED9\\u53E6\\u4E00\\u4E0A\\u4E0B\\u6587\\u5F53\\u4E2D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"// coroutine.io\\nodd := Object clone\\nodd numbers := method(\\n  1 println\\n  yield\\n  3 println\\n  yield\\n)\\n\\neven := Object clone\\neven numbers := method(\\n  yield\\n  2 println\\n  yield\\n  4 println\\n)\\n\\nodd @@numbers\\neven @@numbers\\n\\nCoroutine currentCoroutine pause\\n\\n// $ io coroutine.io\\n// 1\\n// 2\\n// 3\\n// 4\\n// Scheduler: nothing left to resume so we are exiting\\n\")), mdx(\"p\", null, \"actor\\uFF1A\\u80FD\\u63A5\\u6536\\u6D88\\u606F\\u5E76\\u57FA\\u4E8E\\u5176\\u6267\\u884C\\u8FD0\\u7B97\\uFF0C\\u4E5F\\u53EF\\u4EE5\\u53D1\\u9001\\u6D88\\u606F\\u7ED9\\u5176\\u4ED6 Actor\\u3002Actors \\u4E4B\\u95F4\\u76F8\\u4E92\\u9694\\u79BB\\uFF0C\\u5B83\\u4EEC\\u4E4B\\u95F4\\u5E76\\u4E0D\\u5171\\u4EAB\\u5185\\u5B58\"), mdx(\"p\", null, \"\\u4E00\\u4E2A actor \\u53EA\\u80FD\\u6539\\u53D8\\u81EA\\u8EAB\\u7684\\u72B6\\u6001\\uFF0C\\u5E76\\u901A\\u8FC7\\u4E25\\u683C\\u7684\\u961F\\u5217\\u63A5\\u89E6\\u5176\\u4ED6 actor\\uFF0C\\u800C\\u7EBF\\u7A0B\\u53EF\\u4EE5\\u4E0D\\u53D7\\u9650\\u5236\\u7684\\u6539\\u53D8\\u5F7C\\u6B64\\u72B6\\u6001\\uFF0C\\u6709\\u7ADE\\u4E89\\u6761\\u4EF6\\u7684\\u5E76\\u53D1\\u95EE\\u9898\"), mdx(\"p\", null, \"Io \\u4E2D\\u53D1\\u9001\\u5F02\\u6B65\\u6D88\\u606F\\u7684\\u5BF9\\u8C61\\u5C31\\u662F actor\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-io\"\n  }), \"slower := Object clone\\nfaster := Object clone\\nslower start := method(wait(2); writeln(\\\"slowly\\\"))\\nfaster start := method(wait(1); writeln(\\\"fastly\\\"))\\n\\nslower start; faster start\\n// 2s => \\\"slowly\\\"\\n// 3s => \\\"fastly\\\"\\n\\nslower @@start; faster @@start; wait(3) // slower actor \\u63A5\\u6536 start \\u6D88\\u606F\\u5230\\u961F\\u5217\\uFF0C\\u6267\\u884C\\uFF1Bfaster actor \\u63A5\\u6536 start \\u6D88\\u606F\\u5230\\u961F\\u5217\\uFF0C\\u6267\\u884C\\n// 1s => \\\"fastly\\\"\\n// 2s => \\\"slowly\\\"\\n\")), mdx(\"p\", null, \"future\\uFF1A@ \\u8C03\\u7528\\u6D88\\u606F\\u65F6\\u8FD4\\u56DE\\uFF0C\\u4E00\\u6BB5\\u65F6\\u95F4\\u540E\\u4F1A\\u53D8\\u6210\\u7ED3\\u679C\\u503C\\uFF0C\\u5982\\u679C\\u672A\\u4EA7\\u751F\\u7ED3\\u679C\\u662F\\u4F7F\\u7528 future \\u5C31\\u4F1A\\u963B\\u585E\\u76F4\\u5230\\u4EA7\\u751F\\u7ED3\\u679C\"), mdx(\"p\", null, \"\\u7C7B\\u4F3C\\u4E8E JavaScript \\u4E2D\\u7684 async/await\\uFF08async/await \\u901A\\u8FC7 Promise \\u5B9E\\u73B0\\uFF0C\\u4F46\\u5199\\u6CD5\\u4E0A future \\u66F4\\u50CF async/await\\uFF09\"), mdx(\"h2\", {\n    \"id\": \"feeling\"\n  }, \"feeling\"), mdx(\"p\", null, \"\\u5360\\u7528\\u7A7A\\u95F4\\u5C0F\\uFF0C\\u5BB9\\u6613\\u5B89\\u88C5\"), mdx(\"p\", null, \"\\u5BF9\\u8C61\\u4E0E\\u6D88\\u606F\\uFF0C\\u7B80\\u5355\\u5F3A\\u5927\"), mdx(\"p\", null, \"\\u7B80\\u6D01\\u7684\\u8BED\\u6CD5\\uFF0CLisp + OOP\"), mdx(\"p\", null, \"\\u5F88\\u81EA\\u7531\\uFF0CDSL \\u80FD\\u529B\\u5F3A\\u5927\"), mdx(\"p\", null, \"\\u5148\\u8FDB\\u7684\\u5E76\\u53D1\\u6A21\\u578B\"), mdx(\"p\", null, \"\\u6027\\u80FD\\u4E0D\\u884C\"), mdx(\"p\", null, \"\\u793E\\u533A\\u592A\\u592A\\u592A\\u592A\\u5C0F\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/7-languages-in-7-weeks/io"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}