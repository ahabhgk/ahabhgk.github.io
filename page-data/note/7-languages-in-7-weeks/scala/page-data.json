{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/7-languages-in-7-weeks/scala","result":{"data":{"page":{"__typename":"MdxPage","title":"Scala","slug":"/note/7-languages-in-7-weeks/scala","excerpt":"连接 Java 和 FP 强类型，类型推断 FP immutable 分层 FP 与并发：并发问题在于可变状态，定义后可被多次赋值，两个线程可以在同一时间改变相同数据，很难保证数据始终处于有效状态，测试难，数据库通过事务和锁解决，Java…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Scala\",\n  \"slug\": \"/note/7-languages-in-7-weeks/scala\",\n  \"date\": \"2020-03-23T00:00:00.000Z\",\n  \"description\": \"《7 周 7 语言》读书笔记\",\n  \"tags\": [\"Note\", \"7 Languages in 7 Weeks\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"\\u8FDE\\u63A5 Java \\u548C FP\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5F3A\\u7C7B\\u578B\\uFF0C\\u7C7B\\u578B\\u63A8\\u65AD\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"FP\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"immutable\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5206\\u5C42\")), mdx(\"p\", null, \"FP \\u4E0E\\u5E76\\u53D1\\uFF1A\\u5E76\\u53D1\\u95EE\\u9898\\u5728\\u4E8E\\u53EF\\u53D8\\u72B6\\u6001\\uFF0C\\u5B9A\\u4E49\\u540E\\u53EF\\u88AB\\u591A\\u6B21\\u8D4B\\u503C\\uFF0C\\u4E24\\u4E2A\\u7EBF\\u7A0B\\u53EF\\u4EE5\\u5728\\u540C\\u4E00\\u65F6\\u95F4\\u6539\\u53D8\\u76F8\\u540C\\u6570\\u636E\\uFF0C\\u5F88\\u96BE\\u4FDD\\u8BC1\\u6570\\u636E\\u59CB\\u7EC8\\u5904\\u4E8E\\u6709\\u6548\\u72B6\\u6001\\uFF0C\\u6D4B\\u8BD5\\u96BE\\uFF0C\\u6570\\u636E\\u5E93\\u901A\\u8FC7\\u4E8B\\u52A1\\u548C\\u9501\\u89E3\\u51B3\\uFF0CJava \\u63D0\\u4F9B\\u63A7\\u5236\\u8BBF\\u95EE\\u5171\\u4EAB\\u6570\\u636E\\u7684\\u5DE5\\u5177\"), mdx(\"p\", null, \"\\u9664\\u5C11\\u6570\\u4F8B\\u5916\\uFF0CScala \\u4E2D\\u4E00\\u5207\\u7686\\u5BF9\\u8C61\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> 5.+(4.*(3)) // \\u8FD9\\u91CC .+ \\u8868\\u793A\\u5BF9\\u8C61 5 \\u4E0A\\u9762\\u7684 + \\u65B9\\u6CD5\\uFF0C\\u64CD\\u4F5C\\u7B26\\u53EF\\u91CD\\u8F7D\\nInt = 17\\n> 1 + 0.8\\nDouble = 1.8\\n> \\\"abc\\\" + 4\\nString = abc4\\n> \\\"abc\\\".size\\nInt = 3\\n\")), mdx(\"p\", null, \"Nil \\u662F\\u4E2A\\u7A7A\\u5217\\u8868\\uFF0CNil \\u548C\\u6570\\u5B57\\u90FD\\u4E0D\\u80FD\\u8F6C\\u6362\\u4E3A Boolean\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> if (0) {println(\\\"hello\\\")}\\nerror\\n> if (Nil) {println(\\\"hello\\\")}\\nerror\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u5F3A\\u7C7B\\u578B\\uFF0C\\u4F1A\\u68C0\\u67E5\\u4E24\\u79CD\\u7C7B\\u578B\\u662F\\u5426\\u517C\\u5BB9 Java\\u3001Ruby\\uFF1B\\u5F31\\u7C7B\\u578B C\\u3001\\u6C47\\u7F16\"), mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"\\u9759\\u6001\\u7C7B\\u578B\\u5224\\u65AD\\u9E2D\\u5B50\\u6839\\u636E\\u57FA\\u56E0\\uFF0C\\u52A8\\u6001\\u7C7B\\u578B\\u5224\\u65AD\\u9E2D\\u5B50\\u6839\\u636E\\u53EB\\u58F0\\u548C\\u8D70\\u59FF\")), mdx(\"p\", null, \"Range \\u7C7B\\u578B\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"val range = 0 until 10\\nval r = (0 to 10) by 5\\nr.start // 0\\nr.end // 10\\nr.step // 5\\nr.size // 3\\n\\nval r2 = (0 until 10 by 5)\\nr.start // 0\\nr.end // 10\\nr.step // 5\\nr.size // 2\\n\\n(1 to 10) // 1 \\u662F\\u9ED8\\u8BA4 step\\n(10 until 0) by -1 // \\u6839\\u636E step \\u6539\\u53D8\\u65B9\\u5411\\n\")), mdx(\"p\", null, \"\\u5143\\u7EC4\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"val person = (\\\"ahab\\\", 18) // person: (String, Int) = (ahab,18)\\nperson._1 // \\\"ahab\\\"\\nperson._2 // 18\\n\\nval (a, b) = (1, 2)\\n\")), mdx(\"p\", null, \"\\u7C7B\\uFF0C\\u53CC\\u6784\\u9020\\u5668\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"class Person(name: String, age: Int) {\\n  // \\u4E3B\\u6784\\u9020\\u5668\\n  val info = name + age\\n  println(\\\"outer constructor: \\\" + info) // outer constructor: ahab19\\n\\n  def this(firstName: String, lastName: String, age: Int) { // \\u8F85\\u52A9\\u6784\\u9020\\u5668\\n    this(firstName + lastName, age) // outer constructor: ahabhgk19\\n    println(\\\"inner constructor: \\\" + info) // inner constructor: ahabhgk19\\n  }\\n\\n  def talk(): Unit = println(\\\"hello\\\")\\n}\\n\\nval p = new Person(\\\"ahab\\\", 19)\\np.talk()\\n\\nval p2 = new Person(\\\"ahab\\\", \\\"hgk\\\", 19)\\np.talk()\\n\")), mdx(\"p\", null, \"\\u6269\\u5C55\\u7C7B\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u4F19\\u4F34\\u5BF9\\u8C61\\u548C\\u7C7B\\u65B9\\u6CD5\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"object TrueRing { // object \\u58F0\\u660E\\u5355\\u4F8B\\u5BF9\\u8C61\\n  def rule(): Unit = println(\\\"to rule them all\\\")\\n}\\n\\nTrueRing.rule()\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u7EE7\\u627F\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"class Person(val name: String) {\\n  def talk(message: String) {\\n    println(name + \\\" says: \\\" + message)\\n  }\\n  def id = name\\n}\\n\\nclass Employee(override val name: String, val number: Int) extends Person(name) {\\n  override def id: String = super.id\\n\\n  override def talk(message: String) {\\n    println(\\\"employee: \\\" + name + \\\" says: \\\" + message)\\n  }\\n}\\n\\nval em = new Employee(\\\"yoda\\\", 4)\\n\\nem.talk(\\\"hah\\\") // employee: yoda says: hah\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"trait (mixin)\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"class Person(val name: String)\\n\\ntrait Nice {\\n  def greeting(): Unit = println(\\\"hello\\\")\\n}\\n\\nclass GoodMan(override val name: String) extends Person(name) with Nice\\n\\nval p = new GoodMan(\\\"zkk\\\")\\np.greeting() // \\\"hello\\\"\\n\")), mdx(\"p\", null, \"var \\u4E0E val\\uFF1Avar is mutable, val is immutable\"), mdx(\"p\", null, \"\\u96C6\\u5408\\uFF1AList\\u3001Set\\u3001Map\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"List\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> List(1, 2, 3)\\nList[Int] = List(1, 2, 3)\\n> List(1, 2, \\\"ha\\\")\\nList[Any] = List(1, 2, \\\"ha\\\")\\n> List(1, \\\"ha\\\")(0)\\nAny = 1\\n> List(1, 2, 3) == List(3, 2, 1)\\nBoolean = false\\n\")), mdx(\"ol\", {\n    \"start\": 2\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Set\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> val animals = Set(\\\"lions\\\", \\\"tigers\\\")\\nSet[String] = Set(\\\"lions\\\", \\\"tigers\\\")\\n> val animals2 = animals - \\\"tigers\\\"\\nSet(\\\"lions\\\")\\n> val andAnimals = animals ++ Set(\\\"lions\\\", \\\"bears\\\")\\nSet(\\\"lions\\\", \\\"tigers\\\", \\\"bears\\\")\\n> val divAnimals = animals -- Set(\\\"lions\\\")\\nSet(\\\"tigers\\\")\\n> Set(1, 2, 3) == Set(3, 2, 1)\\nBoolean = true\\n\")), mdx(\"ol\", {\n    \"start\": 3\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Map\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> val ordinals = Map(0 -> \\\"zero\\\", 1 -> \\\"one\\\", 2 -> \\\"two\\\")\\nMap[Int, String] = Map(0 -> \\\"zero\\\", 1 -> \\\"one\\\", 2 -> \\\"two\\\")\\n> ordinals(2)\\nString = \\\"two\\\"\\n> val map = new HashMap[Int, String]\\n> map += 4 -> \\\"four\\\"\\n> map += 5 -> \\\"five\\\"\\n\")), mdx(\"ol\", {\n    \"start\": 4\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u6240\\u6709\\u7C7B\\u90FD\\u7EE7\\u627F\\u4E0E Any\\uFF0CNothing \\u7EE7\\u627F\\u81EA\\u6240\\u6709\\u7C7B\\u3002Null \\u662F\\u4E00\\u4E2A trait\\uFF0Cnull \\u662F Null \\u7684\\u5B9E\\u4F8B\\uFF0CNil \\u662F\\u4E2A\\u7A7A List\\uFF0CNothing \\u662F\\u4E00\\u4E2A trait\\u3002\\u629B\\u51FA\\u5F02\\u5E38\\u7684\\u65B9\\u6CD5\\u8FD4\\u56DE\\u7C7B\\u578B\\u4E3A Nothing\\uFF0C\\u8868\\u793A\\u6C38\\u4E0D\\u8FD4\\u56DE\")), mdx(\"p\", null, \"\\u96C6\\u5408\\u65B9\\u6CD5\\uFF1Aforeach lenght size isEmpty head tail last init reverse drop count filter map forall exists sort\"), mdx(\"p\", null, \"foldLeft (reduce)\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"> val li = List(1, 2, 3)\\n> val sum = (0 /: li) {(sum, i) => sum + i}\\n> li.foldLeft(0)((sum, i) => sum + i) // curry\\n\")), mdx(\"p\", null, \"\\u4E00\\u7B49\\u7ED3\\u6784\\u7684 XML\"), mdx(\"p\", null, \"\\u6A21\\u5F0F\\u5339\\u914D\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"def factorial(n: Int): Int = n match {\\n  case 0 => 1\\n  case x if x > 0 => factorial(n - 1) * n\\n}\\n\\nfactorial(3)\\nfactorial(6)\\n\")), mdx(\"h2\", {\n    \"id\": \"并发\"\n  }, \"\\u5E76\\u53D1\"), mdx(\"p\", null, \"actor \\u548C\\u6D88\\u606F\\u4F20\\u9012\\uFF0Cactor \\u62E5\\u6709\\u7EBF\\u7A0B\\u6C60\\u548C\\u961F\\u5217\\u6C60\\uFF0C\\u5F53\\u7528 ! \\u7ED9 actor \\u53D1\\u6D88\\u606F\\u65F6\\uFF0C\\u662F\\u8BB2\\u4E00\\u4E2A\\u5BF9\\u8C61\\u653E\\u5230 actor \\u7684\\u961F\\u5217\\u4E2D\\uFF0Cactor \\u8BFB\\u6D88\\u606F\\u5E76\\u884C\\u52A8\\uFF0C\\u901A\\u5E38\\u901A\\u8FC7\\u6A21\\u5F0F\\u5339\\u914D\\u5904\\u7406\\u6D88\\u606F\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-scala\"\n  }), \"case object Poke\\ncase object Feed\\n\\nclass Kid() extends Actor {\\n  def act() {\\n    loop {\\n      react {\\n        case Poke => println(\\\"Ow\\\")\\n        case Feed => println(\\\"Lala\\\")\\n      }\\n    }\\n  }\\n}\\n\\nval kk = new Kid()\\nval dd = new Kid()\\n\\nkk ! Poke\\ndd ! Poke\\nkk ! Feed\\ndd ! Feed\\n\\n// \\\"Ow\\\"\\n// \\\"Lala\\\"\\n// \\\"Ow\\\"\\n// \\\"Lala\\\"\\n\\n// \\\"Ow\\\"\\n// \\\"Ow\\\"\\n// \\\"Lala\\\"\\n// \\\"Lala\\\"\\n\\n// \\u4E24\\u6B21\\u987A\\u5E8F\\u4E0D\\u540C\\uFF0C\\u662F\\u5E76\\u53D1\\u7684\\n\")), mdx(\"p\", null, \"reactWithin \\u8D85\\u65F6\\u5904\\u7406\\u3001receive \\u963B\\u585E\\u7EBF\\u7A0B\\u3001receiveWithin \\u8D85\\u65F6\\u65F6\\u95F4\\u5185\\u963B\\u585E\\u7EBF\\u7A0B\"), mdx(\"h2\", {\n    \"id\": \"feeling\"\n  }, \"feeling\"), mdx(\"p\", null, \"\\u5E76\\u53D1\"), mdx(\"p\", null, \"FP + \\u7C7B\"), mdx(\"p\", null, \"\\u7075\\u6D3B trait \\u91CD\\u8F7D\"), mdx(\"p\", null, \"JVM \\u5F3A\\u5927\\u7684\\u793E\\u533A\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/7-languages-in-7-weeks/scala"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}