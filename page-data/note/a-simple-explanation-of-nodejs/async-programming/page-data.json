{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/a-simple-explanation-of-nodejs/async-programming","result":{"data":{"page":{"__typename":"MdxPage","title":"异步编程","slug":"/note/a-simple-explanation-of-nodejs/async-programming","excerpt":"Promise 与事件发布订阅 发布订阅模式是低级接口，Promise 是高级接口 Ryan Dahl: Node JS - JSConf EU 2009 \n Ryan Dahl: 我对 Node.js 遗憾的十件事 - JSConf EU 2018 其他 Promise…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"异步编程\",\n  \"slug\": \"/note/a-simple-explanation-of-nodejs/async-programming\",\n  \"date\": \"2020-10-25T00:00:00.000Z\",\n  \"description\": \"《深入浅出 NodeJS》读书笔记\",\n  \"tags\": [\"Note\", \"A Simple Explanation of NodeJS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h2\", {\n    \"id\": \"promise-与事件发布订阅\"\n  }, \"Promise \\u4E0E\\u4E8B\\u4EF6\\u53D1\\u5E03\\u8BA2\\u9605\"), mdx(\"p\", null, \"\\u53D1\\u5E03\\u8BA2\\u9605\\u6A21\\u5F0F\\u662F\\u4F4E\\u7EA7\\u63A5\\u53E3\\uFF0CPromise \\u662F\\u9AD8\\u7EA7\\u63A5\\u53E3\"), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://youtu.be/EeYvFl7li9E?list=PL37ZVnwpeshGNXb77ObNUbvax-VQ_DWJe&t=1529\"\n  }), \"Ryan Dahl: Node JS - JSConf EU 2009\"), \"\\n\", mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://youtu.be/M3BM9TB-8yA?t=306\"\n  }), \"Ryan Dahl: \\u6211\\u5BF9 Node.js \\u9057\\u61BE\\u7684\\u5341\\u4EF6\\u4E8B - JSConf EU 2018\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"const { EventEmitter } = require('events')\\n\\nconst isEPromise = promise => promise instanceof EPromise\\n\\nconst PENDING = Symbol('PENDING')\\nconst FULFILLED = Symbol('FULFILLED')\\nconst REJECTED = Symbol('REJECTED')\\n\\nclass EPromise extends EventEmitter {\\n  constructor(f) {\\n    super()\\n\\n    this.state = PENDING\\n    this.value = undefined\\n    this.reason = undefined\\n\\n    const resolve = (value) => {\\n      if (this.state === PENDING) {\\n        this.state = FULFILLED\\n        this.value = value\\n        setTimeout(() => this.emit('resolve'), 0)\\n      }\\n    }\\n    const reject = (reason) => {\\n      if (this.state === PENDING) {\\n        this.state = REJECTED\\n        this.reason = reason\\n        setTimeout(() => this.emit('reject'), 0)\\n      }\\n    }\\n\\n    try {\\n      f(resolve, reject)\\n    } catch (e) {\\n      reject(e)\\n    }\\n  }\\n\\n  then(onFulfilled, onRejected) {\\n    const p = new EPromise((resolve, reject) => {\\n      if (this.state === PENDING) {\\n        this.once('resolve', () => resolve(onFulfilled(this.value)))\\n        this.once('reject', () => reject(onRejected(this.reason)))\\n      } else if (this.state === FULFILLED) {\\n        setTimeout(() => resolve(onFulfilled(this.value)), 0)\\n      } else if (this.state === REJECTED) {\\n        setTimeout(() => reject(onRejected(this.reason)), 0)\\n      } else throw new Error('promise state error')\\n    })\\n    return p\\n  }\\n\\n  catch(f) {\\n    this.then(v => v, f)\\n  }\\n\\n  static resolve(v) {\\n    if (isEPromise(v)) return v\\n    return new EPromise(resolve => resolve(v))\\n  }\\n\\n  static reject(r) {\\n    return new EPromise((_, reject) => reject(r))\\n  }\\n}\\n\")), mdx(\"p\", null, \"\\u5176\\u4ED6 Promise \\u7684\\u5B9E\\u73B0\\u5B9E\\u9645\\u4E0A\\u5185\\u90E8\\u4E5F\\u662F\\u5728 resolve\\u3001reject \\u7684\\u65F6\\u5019\\u8FDB\\u884C\\u201C\\u4E8B\\u4EF6\\u7684\\u901A\\u77E5\\u201D\"), mdx(\"p\", null, \"Promise \\u5C06\\u4E0D\\u53EF\\u53D8\\u7684\\u90E8\\u5206\\u5C01\\u88C5\\uFF0C\\u53EF\\u53D8\\u7684\\u90E8\\u5206\\u901A\\u8FC7 onFulfilled\\u3001onRejected \\u4EA4\\u7ED9\\u5F00\\u53D1\\u8005\"), mdx(\"p\", null, \"Promise \\u4E2D\\u7684\\u591A\\u5F02\\u6B65\\u534F\\u4F5C\\uFF1Aall\\u3001race\\u3001allSettle\\u2026\\u2026\"), mdx(\"h2\", {\n    \"id\": \"流程控制\"\n  }, \"\\u6D41\\u7A0B\\u63A7\\u5236\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u5C3E\\u89E6\\u53D1\\u4E0E next\\uFF1A\\u4E2D\\u95F4\\u4EF6\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"async\\uFF1A\\u4E32\\u884C\\u3001\\u5E76\\u884C\\u3001\\u4F9D\\u8D56\\u5904\\u7406\")), mdx(\"h2\", {\n    \"id\": \"并发控制\"\n  }, \"\\u5E76\\u53D1\\u63A7\\u5236\"), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-js\"\n  }), \"for (let i = 0; i < 100; i++) {\\n  asyncFn()\\n}\\n\")), mdx(\"p\", null, \"\\u5982\\u679C\\u5E76\\u53D1\\u91CF\\u8FC7\\u5927\\uFF0C\\u4E0B\\u5C42\\u670D\\u52A1\\u53EF\\u80FD\\u4F1A\\u5403\\u4E0D\\u6D88\\uFF0C\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"\\u53EF\\u4EE5\\u901A\\u8FC7\\u4E00\\u4E2A\\u961F\\u5217\\u6765\\u63A7\\u5236\")));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/a-simple-explanation-of-nodejs/async-programming"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}