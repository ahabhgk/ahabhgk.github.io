{"componentChunkName":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-page-query-tsx","path":"/note/a-simple-explanation-of-nodejs/memory-control","result":{"data":{"page":{"__typename":"MdxPage","title":"内存控制","slug":"/note/a-simple-explanation-of-nodejs/memory-control","excerpt":"美团面试下面有记过 V8 GC 内存泄漏 内存当缓存：把对象的键值来当缓存，但缓存有严格的过期策略，键值没有 模块会被缓存：模块编译执行后形成作用域导致变量不被释放 队列消费不及时 内存泄漏排查 node-heapdump node-memwatch…","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"内存控制\",\n  \"slug\": \"/note/a-simple-explanation-of-nodejs/memory-control\",\n  \"date\": \"2020-10-26T00:00:00.000Z\",\n  \"description\": \"《深入浅出 NodeJS》读书笔记\",\n  \"tags\": [\"Note\", \"A Simple Explanation of NodeJS\"]\n};\n\nvar makeShortcode = function makeShortcode(name) {\n  return function MDXDefaultShortcode(props) {\n    console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n    return mdx(\"div\", props);\n  };\n};\n\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", _extends({\n    parentName: \"p\"\n  }, {\n    \"href\": \"https://ahabhgk.github.io/blog/interview-of-meituan-internship\"\n  }), \"\\u7F8E\\u56E2\\u9762\\u8BD5\\u4E0B\\u9762\\u6709\\u8BB0\\u8FC7 V8 GC\")), mdx(\"pre\", null, mdx(\"code\", _extends({\n    parentName: \"pre\"\n  }, {\n    \"className\": \"language-shell\"\n  }), \"node --trace_gc -e \\\"var a = []; for (var i = 0; i < 1000000; i++) a.push(new Array(100));\\\"\\n\")), mdx(\"h2\", {\n    \"id\": \"内存泄漏\"\n  }, \"\\u5185\\u5B58\\u6CC4\\u6F0F\"), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u5185\\u5B58\\u5F53\\u7F13\\u5B58\\uFF1A\\u628A\\u5BF9\\u8C61\\u7684\\u952E\\u503C\\u6765\\u5F53\\u7F13\\u5B58\\uFF0C\\u4F46\\u7F13\\u5B58\\u6709\\u4E25\\u683C\\u7684\\u8FC7\\u671F\\u7B56\\u7565\\uFF0C\\u952E\\u503C\\u6CA1\\u6709\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u6A21\\u5757\\u4F1A\\u88AB\\u7F13\\u5B58\\uFF1A\\u6A21\\u5757\\u7F16\\u8BD1\\u6267\\u884C\\u540E\\u5F62\\u6210\\u4F5C\\u7528\\u57DF\\u5BFC\\u81F4\\u53D8\\u91CF\\u4E0D\\u88AB\\u91CA\\u653E\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"\\u961F\\u5217\\u6D88\\u8D39\\u4E0D\\u53CA\\u65F6\")), mdx(\"h2\", {\n    \"id\": \"内存泄漏排查\"\n  }, \"\\u5185\\u5B58\\u6CC4\\u6F0F\\u6392\\u67E5\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"node-heapdump\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"node-memwatch\")), mdx(\"h2\", {\n    \"id\": \"大内存应用\"\n  }, \"\\u5927\\u5185\\u5B58\\u5E94\\u7528\"), mdx(\"p\", null, \"\\u4F7F\\u7528 stream\"));\n}\n;\nMDXContent.isMDXComponent = true;"}},"pageContext":{"slug":"/note/a-simple-explanation-of-nodejs/memory-control"}},"staticQueryHashes":["318001574","3787687951","3787687951"]}